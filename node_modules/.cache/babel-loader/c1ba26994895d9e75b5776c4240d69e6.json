{"ast":null,"code":"var _jsxFileName = \"/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/MainSections/Content.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport ScrapeReddit from '../ScrapeReddit';\nimport ScrapeTwitter from '../ScrapeTwitter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Content(props) {\n  _s();\n  const [whatToScrape, setWhatToScrape] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: whatToScrape == '' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../../Photos/twitterIcon.png'),\n        alt: \"user icon\",\n        className: \"twitterIcon-main\",\n        onClick: () => {\n          setWhatToScrape('twitter');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../../Photos/redditIcon.png'),\n        alt: \"user icon\",\n        className: \"redditIcon-main\",\n        onClick: () => {\n          setWhatToScrape('reddit');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: '300px',\n          textAlign: 'center'\n        },\n        children: \"Choose the platfrom you want to scrape information from\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: whatToScrape == 'reddit' ? /*#__PURE__*/_jsxDEV(ScrapeReddit, {\n        setWhatToScrape: setWhatToScrape\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(ScrapeTwitter, {\n        setWhatToScrape: setWhatToScrape\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(Content, \"wsatRzaiZKK5a/VeebWO9W1tvPw=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","useEffect","ScrapeReddit","ScrapeTwitter","Content","props","whatToScrape","setWhatToScrape","require","marginBottom","textAlign"],"sources":["/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/MainSections/Content.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport ScrapeReddit from '../ScrapeReddit';\nimport ScrapeTwitter from '../ScrapeTwitter';\n\nfunction Content(props) {\n\n    const [whatToScrape, setWhatToScrape] = useState('');\n\n\n    return (\n        <main>\n            {whatToScrape=='' ?\n                <>\n                    <img src={require('../../Photos/twitterIcon.png')} alt='user icon' className='twitterIcon-main' onClick={()=>{setWhatToScrape('twitter')}}></img>\n                    <img src={require('../../Photos/redditIcon.png')} alt='user icon' className='redditIcon-main' onClick={()=>{setWhatToScrape('reddit')}}></img>\n                    <h1 style={{marginBottom:'300px', textAlign:'center'}}>Choose the platfrom you want to scrape information from</h1>\n                </>\n                :\n                <>\n                {whatToScrape=='reddit' ? \n                <ScrapeReddit setWhatToScrape={setWhatToScrape}/>\n                : <ScrapeTwitter setWhatToScrape={setWhatToScrape}/>\n                }\n                </>\n            }\n\n        </main>\n    );\n}\n\nexport default Content;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AAEjC,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,aAAa,MAAM,kBAAkB;AAAC;AAAA;AAE7C,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EAEpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAGpD,oBACI;IAAA,UACKM,YAAY,IAAE,EAAE,gBACb;MAAA,wBACI;QAAK,GAAG,EAAEE,OAAO,CAAC,8BAA8B,CAAE;QAAC,GAAG,EAAC,WAAW;QAAC,SAAS,EAAC,kBAAkB;QAAC,OAAO,EAAE,MAAI;UAACD,eAAe,CAAC,SAAS,CAAC;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO,eACjJ;QAAK,GAAG,EAAEC,OAAO,CAAC,6BAA6B,CAAE;QAAC,GAAG,EAAC,WAAW;QAAC,SAAS,EAAC,iBAAiB;QAAC,OAAO,EAAE,MAAI;UAACD,eAAe,CAAC,QAAQ,CAAC;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO,eAC9I;QAAI,KAAK,EAAE;UAACE,YAAY,EAAC,OAAO;UAAEC,SAAS,EAAC;QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6D;IAAA,gBACpH,gBAEH;MAAA,UACCJ,YAAY,IAAE,QAAQ,gBACvB,QAAC,YAAY;QAAC,eAAe,EAAEC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE,gBAC/C,QAAC,aAAa;QAAC,eAAe,EAAEA;MAAgB;QAAA;QAAA;QAAA;MAAA;IAAE;EAEjD;IAAA;IAAA;IAAA;EAAA,QAGJ;AAEf;AAAC,GAxBQH,OAAO;AAAA,KAAPA,OAAO;AA0BhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}