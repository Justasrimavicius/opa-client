{"ast":null,"code":"import _slicedToArray from\"/Users/justinas/Documents/repos/teamProject/web/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useEffect}from'react';import{useContext}from'react';import{useState}from'react';import{useRef}from'react';import MyContext from'../context';import WordCloudSec from'./MainSections/WordCloudSec';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ScrapeTwitter(props){var _useContext=useContext(MyContext),UID=_useContext.UID;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),wordCloud=_useState6[0],activateWordCloud=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),scrapeResults=_useState8[0],setScrapeResults=_useState8[1];var textInputRef=useRef();var resFreqRef=useRef();var scrapeBtnRef=useRef();var previousText=useRef('TEMPLATE MESSAGE');function scrape(){var text=textInputRef.current.value;var freq=resFreqRef.current.value;if(freq=='')freq=100;if(freq!=''&&isNaN(freq)){setError('Word quantity must be a number');return;}if(freq!=''&&freq<100){setError('Word frequency must be greater than 100');return;}if(freq!=''&&freq>1000){setError(\"Word frequency can't be larger then 1000\");}if(text==previousText.current){setError('Type a different word/phrase');return;}else if(text==''){setError(\"Input field can't be empty\");return;}previousText.current=text;setLoading(true);var xhr=new XMLHttpRequest();xhr.open('POST','http://localhost:8080/twitterScrapping',true);xhr.setRequestHeader('Content-Type','application/json');xhr.send(JSON.stringify({text:text,freq:freq}));xhr.onload=function(){console.log(xhr.responseText);setLoading(false);var response=xhr.responseText.slice(2,xhr.responseText.length-4);var temp_all=response.split('(');var cleanerTemp=temp_all.map(function(res){return res.slice(0,res.indexOf(')'));});cleanerTemp.shift();var temp_seperatedFrequancyAndWords=cleanerTemp.map(function(elem){return elem.split(',');});var final=temp_seperatedFrequancyAndWords.map(function(elem){return elem.map(function(innerElem){return innerElem.replaceAll(' ','').replaceAll(\"'\",'');});});console.log(final);setScrapeResults(final);};}useEffect(function(){if(error!==null){setTimeout(function(){setError(null);},2000);}},[error]);useEffect(function(){if(loading==true){scrapeBtnRef.current.classList.add('button-disabled');}if(loading==false&&scrapeBtnRef.current.classList.contains('button-disabled')){activateWordCloud(false);scrapeBtnRef.current.classList.remove('button-disabled');}},[loading]);return/*#__PURE__*/_jsxs(\"div\",{className:\"scrapeTwitter\",children:[/*#__PURE__*/_jsx(\"h4\",{style:{fontSize:'2rem',margin:'0'},children:\"Twitter scrapping\"}),/*#__PURE__*/_jsx(\"p\",{className:\"errorMsg\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"inputs\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"main-text-input\",placeholder:\"Your word\",ref:textInputRef}),/*#__PURE__*/_jsx(\"input\",{className:\"main-text-input\",placeholder:\"Word qty.\",ref:resFreqRef})]}),wordCloud==false?/*#__PURE__*/_jsxs(\"div\",{className:\"input-results\",children:[/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Word\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Frequency\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"input-innerResults\",children:scrapeResults.map(function(singleField,index){if(isNaN(singleField[1]))return;return/*#__PURE__*/_jsxs(\"ul\",{className:\"reddit-ul\",children:[/*#__PURE__*/_jsx(\"li\",{children:singleField[0]}),/*#__PURE__*/_jsx(\"li\",{children:singleField[1]})]},index);})})]}):/*#__PURE__*/_jsx(WordCloudSec,{array:scrapeResults,goBack:activateWordCloud}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){scrape();},ref:scrapeBtnRef,children:loading==true?/*#__PURE__*/_jsx(\"div\",{className:\"lds-dual-ring\"}):/*#__PURE__*/_jsx(\"p\",{style:{margin:'0'},children:\"Scrape\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){if(scrapeResults.length==0){setError('First, enter a word/phrase to scrape');return;};if(UID==''){setError('You need to log in in order to see the detailed view');return;}activateWordCloud(true);},children:\"Detailed view\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"goBack-btn\",onClick:function onClick(){if(wordCloud==true){activateWordCloud(false);return;}props.setWhatToScrape('');},children:\"Go back\"})]});}export default ScrapeTwitter;","map":{"version":3,"names":["React","useEffect","useContext","useState","useRef","MyContext","WordCloudSec","ScrapeTwitter","props","UID","error","setError","loading","setLoading","wordCloud","activateWordCloud","scrapeResults","setScrapeResults","textInputRef","resFreqRef","scrapeBtnRef","previousText","scrape","text","current","value","freq","isNaN","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","console","log","responseText","response","slice","length","temp_all","split","cleanerTemp","map","res","indexOf","shift","temp_seperatedFrequancyAndWords","elem","final","innerElem","replaceAll","setTimeout","classList","add","contains","remove","fontSize","margin","singleField","index","setWhatToScrape"],"sources":["/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/ScrapeTwitter.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport MyContext from '../context';\nimport WordCloudSec from './MainSections/WordCloudSec';\n\nfunction ScrapeTwitter(props) {\n    const { UID } = useContext(MyContext);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [wordCloud, activateWordCloud] = useState(false);\n\n    const [scrapeResults, setScrapeResults] = useState([]);\n\n    const textInputRef = useRef();\n    const resFreqRef = useRef();\n    const scrapeBtnRef = useRef();\n    let previousText = useRef('TEMPLATE MESSAGE');\n    function scrape(){\n        const text = textInputRef.current.value;\n        let freq = resFreqRef.current.value;\n        if(freq == '')freq = 100;\n        if(freq != '' && isNaN(freq)){\n            setError('Word quantity must be a number')\n            return;\n        }\n        if(freq != '' && freq < 100){\n            setError('Word frequency must be greater than 100')\n            return;\n        }\n        if(freq != '' && freq > 1000){\n            setError(`Word frequency can't be larger then 1000`)\n        }\n        if(text==previousText.current){\n            setError('Type a different word/phrase');\n            return;\n        } else if(text==''){\n            setError(`Input field can't be empty`);\n            return;\n        }\n        previousText.current = text;\n        setLoading(true);\n\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST','http://localhost:8080/twitterScrapping', true);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify({\n            text: text,\n            freq: freq\n        }));\n        xhr.onload = ()=>{\n            console.log(xhr.responseText)\n            setLoading(false);\n            const response = xhr.responseText.slice(2, xhr.responseText.length - 4);\n            const temp_all = response.split('(');\n            const cleanerTemp = temp_all.map(res => {\n                return res.slice(0, res.indexOf(')'))\n            })\n            cleanerTemp.shift();\n            const temp_seperatedFrequancyAndWords = cleanerTemp.map(elem=>{\n                return elem.split(',');\n            })\n\n            const final = temp_seperatedFrequancyAndWords.map(elem=>{\n                return elem.map(innerElem=>{\n                    return (innerElem.replaceAll(' ', '')).replaceAll(`'`,'');\n                })\n            })\n            console.log(final);\n            setScrapeResults(final);\n        }\n    }\n    \n    useEffect(()=>{\n        if(error!==null){\n            setTimeout(() => {\n                setError(null);\n            }, 2000);\n        }\n    },[error])\n\n    useEffect(()=>{\n        if(loading==true){\n            scrapeBtnRef.current.classList.add('button-disabled');\n        }\n        if(loading==false && scrapeBtnRef.current.classList.contains('button-disabled')){\n            activateWordCloud(false);\n            scrapeBtnRef.current.classList.remove('button-disabled');\n        }\n    },[loading])\n\n    return (\n        <div className='scrapeTwitter'>\n            <h4 style={{fontSize:'2rem',margin:'0'}}>Twitter scrapping</h4>\n            <p className='errorMsg'>{error}</p>\n            <div className='inputs'>\n                <input className='main-text-input' placeholder='Your word' ref={textInputRef}></input>\n                <input className='main-text-input' placeholder='Word qty.' ref={resFreqRef}></input>\n            </div>\n            {wordCloud == false ?\n            <div className='input-results'>\n                    <ul>\n                        <li>Word</li>\n                        <li>Frequency</li>\n                    </ul>\n                <div className='input-innerResults'>\n                    {scrapeResults.map((singleField,index)=>{\n                        if(isNaN(singleField[1]))return;\n                        return(\n                            <ul className='reddit-ul' key={index}>\n                                <li>{singleField[0]}</li>\n                                <li>{singleField[1]}</li>\n                            </ul>\n                        )\n                    })}\n                </div>\n            </div>\n            : \n            <WordCloudSec array={scrapeResults} goBack={activateWordCloud}/>\n            }\n            <div className='input-buttons'>\n                <button onClick={()=>{scrape()}} ref={scrapeBtnRef}>{loading==true ? <div className=\"lds-dual-ring\"></div> : <p style={{margin:'0'}}>Scrape</p>}</button>\n                <button onClick={()=>{if(scrapeResults.length == 0){setError('First, enter a word/phrase to scrape'); return};if(UID == ''){setError('You need to log in in order to see the detailed view');return;} activateWordCloud(true)}}>Detailed view</button>\n            </div>\n            <button className='goBack-btn' onClick={()=>{if(wordCloud == true){activateWordCloud(false); return}props.setWhatToScrape('')}}>Go back</button>\n        </div>\n    );\n}\n\nexport default ScrapeTwitter;"],"mappings":"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"},"metadata":{},"sourceType":"module"}