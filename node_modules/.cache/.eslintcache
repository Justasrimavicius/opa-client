[{"/Users/justinas/Documents/repos/teamProject/web/frontend/src/index.js":"1","/Users/justinas/Documents/repos/teamProject/web/frontend/src/App.js":"2","/Users/justinas/Documents/repos/teamProject/web/frontend/src/context.js":"3","/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/MainSections/Header.jsx":"4","/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/Authentication/Authentication.jsx":"5","/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/MainSections/Content.jsx":"6","/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/ScrapeTwitter.jsx":"7","/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/Authentication/Signup.jsx":"8","/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/Authentication/Login.jsx":"9","/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/ScrapeReddit.jsx":"10","/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/MainSections/WordCloudSec.jsx":"11","/Users/justinas/Documents/repos/teamProject/web/frontend/src/link.js":"12"},{"size":437,"mtime":1669301833561,"results":"13","hashOfConfig":"14"},{"size":977,"mtime":1670399010737,"results":"15","hashOfConfig":"14"},{"size":162,"mtime":1669301062311,"results":"16","hashOfConfig":"14"},{"size":816,"mtime":1670398995035,"results":"17","hashOfConfig":"14"},{"size":2407,"mtime":1670252510390,"results":"18","hashOfConfig":"14"},{"size":1165,"mtime":1670242418696,"results":"19","hashOfConfig":"14"},{"size":5062,"mtime":1670398622357,"results":"20","hashOfConfig":"14"},{"size":2296,"mtime":1670321242036,"results":"21","hashOfConfig":"14"},{"size":1773,"mtime":1670350345649,"results":"22","hashOfConfig":"14"},{"size":6503,"mtime":1670912552483,"results":"23","hashOfConfig":"14"},{"size":2834,"mtime":1670864608531,"results":"24","hashOfConfig":"14"},{"size":100,"mtime":1670912688999,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b3zxjw",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/justinas/Documents/repos/teamProject/web/frontend/src/index.js",[],[],"/Users/justinas/Documents/repos/teamProject/web/frontend/src/App.js",["66","67"],[],"/Users/justinas/Documents/repos/teamProject/web/frontend/src/context.js",[],[],"/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/MainSections/Header.jsx",["68","69","70"],[],"/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/Authentication/Authentication.jsx",["71","72","73","74"],[],"import React, { useEffect, useState } from 'react';\n\nimport Login from './Login';\nimport Signup from './Signup';\n\nfunction Authentication(props) {\n\n    const [authButton, setAuthButton] = useState('default');\n\n    return (\n        <div className='authentication'>\n            <div className='bubble1'></div>\n            <div className='bubble2'></div>\n            <div className='bubble3'></div>\n            <div className='bubble4'></div>\n\n            <div className='auth-left'>\n                <p className='name'>Opa<img src={require('../../Photos/key.png')}></img></p>\n                <p className='auth-mainText'>Find the latest news in glimpse of an eye</p>\n                <button onClick={()=>{props.props.setAuthenticated('unauthenticated')}} className='unauthenticatedBtn'>Use without an account</button>\n                <div className='seperator'></div>\n                <div className='auth-icons'>\n                    <img src={require('../../Photos/twitterIcon.png')} alt='twitter logo' className='twitter-img'></img>\n                    <img src={require('../../Photos/redditIcon.png')} alt='reddit logo' className='reddit-img'></img>\n                </div>\n                \n            </div>\n            <div className='auth-right'>\n                <div className='auth-inputs-holder'>\n                    {\n                    authButton==\"default\" ? \n                    \n                    <> <button onClick={()=>{setAuthButton('login')}} className='signin-btn'>Sign in to your account</button>\n                    <div className='auth-seperation'>\n                        <div className='dash'></div>\n                        <p style={{fontSize: '1.5rem'}}>or</p>\n                        <div className='dash'></div>\n                    </div>\n                    <div className='signup'><button onClick={()=>{setAuthButton('signup')}} className='signup-btn'>Create a new account</button></div> </> \n                    :\n                    <> {\n                        authButton=='login' ?\n                        <Login authState={{setAuthButton}} setAuthenticated={props.props.setAuthenticated}/>\n                        :\n                        <Signup authState={{setAuthButton}} setAuthenticated={props.props.setAuthenticated}/>\n                    } </>\n                    }\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Authentication;","/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/MainSections/Content.jsx",["75","76","77"],[],"import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport ScrapeReddit from '../ScrapeReddit';\nimport ScrapeTwitter from '../ScrapeTwitter';\n\nfunction Content(props) {\n\n    const [whatToScrape, setWhatToScrape] = useState('');\n\n\n    return (\n        <main>\n            {whatToScrape=='' ?\n                <>\n                    <img src={require('../../Photos/twitterIcon.png')} alt='user icon' className='twitterIcon-main' onClick={()=>{setWhatToScrape('twitter')}}></img>\n                    <img src={require('../../Photos/redditIcon.png')} alt='user icon' className='redditIcon-main' onClick={()=>{setWhatToScrape('reddit')}}></img>\n                    <h1 style={{margin:'15px 10px 300px 10px', textAlign:'center'}}>Choose the platfrom you want to scrape information from</h1>\n                </>\n                :\n                <>\n                {whatToScrape=='reddit' ? \n                <ScrapeReddit setWhatToScrape={setWhatToScrape}/>\n                : <ScrapeTwitter setWhatToScrape={setWhatToScrape}/>\n                }\n                </>\n            }\n\n        </main>\n    );\n}\n\nexport default Content;","/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/ScrapeTwitter.jsx",["78","79","80","81","82","83","84","85","86","87","88","89","90","91"],[],"import React from 'react';\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport MyContext from '../context';\nimport WordCloudSec from './MainSections/WordCloudSec';\n\nimport link from '../link';\n\nfunction ScrapeTwitter(props) {\n    const { UID } = useContext(MyContext);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [wordCloud, activateWordCloud] = useState(false);\n\n    const [scrapeResults, setScrapeResults] = useState([]);\n\n    const textInputRef = useRef();\n    const resFreqRef = useRef();\n    const scrapeBtnRef = useRef();\n    let previousText = useRef('TEMPLATE MESSAGE');\n    function scrape(){\n        const text = textInputRef.current.value;\n        let freq = resFreqRef.current.value;\n        if(freq == '')freq = 100;\n        if(freq != '' && isNaN(freq)){\n            setError('Word quantity must be a number')\n            return;\n        }\n        if(freq != '' && freq < 100){\n            setError('Word frequency must be greater than 100')\n            return;\n        }\n        if(freq != '' && freq > 1000){\n            setError(`Word frequency can't be larger then 1000`)\n        }\n        if(text==previousText.current){\n            setError('Type a different word/phrase');\n            return;\n        } else if(text==''){\n            setError(`Input field can't be empty`);\n            return;\n        }\n        previousText.current = text;\n        setLoading(true);\n\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST',`${link}/twitterScrapping`, true);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify({\n            text: text,\n            freq: freq\n        }));\n        xhr.onload = ()=>{\n            setLoading(false);\n            const response = xhr.responseText.slice(2, xhr.responseText.length - 4);\n            const temp_all = response.split('(');\n            const cleanerTemp = temp_all.map(res => {\n                return res.slice(0, res.indexOf(')'))\n            })\n            cleanerTemp.shift();\n            const temp_seperatedFrequancyAndWords = cleanerTemp.map(elem=>{\n                return elem.split(',');\n            })\n\n            const final = temp_seperatedFrequancyAndWords.map(elem=>{\n                return elem.map(innerElem=>{\n                    return (innerElem.replaceAll(' ', '')).replaceAll(`'`,'');\n                })\n            })\n            setScrapeResults(final);\n        }\n    }\n    \n    useEffect(()=>{\n        if(error!==null){\n            setTimeout(() => {\n                setError(null);\n            }, 2000);\n        }\n    },[error])\n\n    useEffect(()=>{\n        if(loading==true){\n            scrapeBtnRef.current.classList.add('button-disabled');\n        }\n        if(loading==false && scrapeBtnRef.current.classList.contains('button-disabled')){\n            activateWordCloud(false);\n            scrapeBtnRef.current.classList.remove('button-disabled');\n        }\n    },[loading])\n\n    return (\n        <div className='scrapeTwitter'>\n            <h4 style={{fontSize:'2rem',margin:'0'}}>Twitter scraping</h4>\n            <p className='errorMsg'>{error}</p>\n            <div className='inputs'>\n                <input className='main-text-input' placeholder='Your word' ref={textInputRef}></input>\n                <input className='main-text-input' placeholder='Word qty.' ref={resFreqRef}></input>\n            </div>\n            {wordCloud == false ?\n            <div className='input-results'>\n                    <ul>\n                        <li>Word</li>\n                        <li>Frequency</li>\n                    </ul>\n                <div className='input-innerResults'>\n                    {scrapeResults.map((singleField,index)=>{\n                        if(isNaN(singleField[1]))return;\n                        return(\n                            <ul className='reddit-ul' key={index}>\n                                <li>{singleField[0].toUpperCase()}</li>\n                                <li>{singleField[1]}</li>\n                            </ul>\n                        )\n                    })}\n                </div>\n            </div>\n            : \n            <WordCloudSec array={scrapeResults} goBack={activateWordCloud}/>\n            }\n            <div className='input-buttons'>\n                <button onClick={()=>{scrape()}} ref={scrapeBtnRef}>{loading==true ? <div className=\"lds-dual-ring\"></div> : <p style={{margin:'0'}}>Scrape</p>}</button>\n                <button onClick={()=>{if(scrapeResults.length == 0){setError('First, enter a word/phrase to scrape'); return};if(UID == ''){setError('You need to log in in order to see the word cloud');return;} activateWordCloud(true)}}>View word cloud</button>\n            </div>\n            <button className='goBack-btn' onClick={()=>{if(wordCloud == true){activateWordCloud(false); return}props.setWhatToScrape('')}}>Go back</button>\n        </div>\n    );\n}\n\nexport default ScrapeTwitter;",[],"/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/Authentication/Signup.jsx",["92"],[],"/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/Authentication/Login.jsx",["93","94"],[],"/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/ScrapeReddit.jsx",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112"],[],"/Users/justinas/Documents/repos/teamProject/web/frontend/src/Components/MainSections/WordCloudSec.jsx",["113","114"],[],"/Users/justinas/Documents/repos/teamProject/web/frontend/src/link.js",["115"],[],{"ruleId":"116","severity":1,"message":"117","line":24,"column":23,"nodeType":"118","messageId":"119","endLine":24,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":26,"column":23,"nodeType":"118","messageId":"119","endLine":26,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":7,"column":12,"nodeType":"122","messageId":"123","endLine":7,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":13,"column":62,"nodeType":"126","endLine":13,"endColumn":152},{"ruleId":"116","severity":1,"message":"117","line":14,"column":40,"nodeType":"118","messageId":"119","endLine":14,"endColumn":42},{"ruleId":"120","severity":1,"message":"127","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":18,"column":40,"nodeType":"126","endLine":18,"endColumn":83},{"ruleId":"116","severity":1,"message":"117","line":31,"column":31,"nodeType":"118","messageId":"119","endLine":31,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":42,"column":35,"nodeType":"118","messageId":"119","endLine":42,"endColumn":37},{"ruleId":"120","severity":1,"message":"127","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":15,"column":26,"nodeType":"118","messageId":"119","endLine":15,"endColumn":28},{"ruleId":"116","severity":1,"message":"117","line":23,"column":30,"nodeType":"118","messageId":"119","endLine":23,"endColumn":32},{"ruleId":"116","severity":1,"message":"117","line":26,"column":17,"nodeType":"118","messageId":"119","endLine":26,"endColumn":19},{"ruleId":"116","severity":1,"message":"128","line":27,"column":17,"nodeType":"118","messageId":"119","endLine":27,"endColumn":19},{"ruleId":"116","severity":1,"message":"128","line":31,"column":17,"nodeType":"118","messageId":"119","endLine":31,"endColumn":19},{"ruleId":"116","severity":1,"message":"128","line":35,"column":17,"nodeType":"118","messageId":"119","endLine":35,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":38,"column":16,"nodeType":"118","messageId":"119","endLine":38,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":41,"column":23,"nodeType":"118","messageId":"119","endLine":41,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":85,"column":19,"nodeType":"118","messageId":"119","endLine":85,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":88,"column":19,"nodeType":"118","messageId":"119","endLine":88,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":102,"column":24,"nodeType":"118","messageId":"119","endLine":102,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":110,"column":50,"nodeType":"131","messageId":"132","endLine":110,"endColumn":57},{"ruleId":"116","severity":1,"message":"117","line":124,"column":77,"nodeType":"118","messageId":"119","endLine":124,"endColumn":79},{"ruleId":"116","severity":1,"message":"117","line":125,"column":63,"nodeType":"118","messageId":"119","endLine":125,"endColumn":65},{"ruleId":"116","severity":1,"message":"117","line":125,"column":134,"nodeType":"118","messageId":"119","endLine":125,"endColumn":136},{"ruleId":"116","severity":1,"message":"117","line":127,"column":71,"nodeType":"118","messageId":"119","endLine":127,"endColumn":73},{"ruleId":"120","severity":1,"message":"121","line":9,"column":13,"nodeType":"122","messageId":"123","endLine":9,"endColumn":16},{"ruleId":"120","severity":1,"message":"127","line":1,"column":29,"nodeType":"122","messageId":"123","endLine":1,"endColumn":38},{"ruleId":"120","severity":1,"message":"121","line":10,"column":13,"nodeType":"122","messageId":"123","endLine":10,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":28,"column":17,"nodeType":"118","messageId":"119","endLine":28,"endColumn":19},{"ruleId":"116","severity":1,"message":"128","line":29,"column":17,"nodeType":"118","messageId":"119","endLine":29,"endColumn":19},{"ruleId":"116","severity":1,"message":"128","line":33,"column":17,"nodeType":"118","messageId":"119","endLine":33,"endColumn":19},{"ruleId":"116","severity":1,"message":"128","line":37,"column":17,"nodeType":"118","messageId":"119","endLine":37,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":41,"column":16,"nodeType":"118","messageId":"119","endLine":41,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":44,"column":23,"nodeType":"118","messageId":"119","endLine":44,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":99,"column":19,"nodeType":"118","messageId":"119","endLine":99,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":102,"column":19,"nodeType":"118","messageId":"119","endLine":102,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":116,"column":24,"nodeType":"118","messageId":"119","endLine":116,"endColumn":26},{"ruleId":"116","severity":1,"message":"117","line":124,"column":49,"nodeType":"118","messageId":"119","endLine":124,"endColumn":51},{"ruleId":"116","severity":1,"message":"117","line":127,"column":43,"nodeType":"118","messageId":"119","endLine":127,"endColumn":45},{"ruleId":"116","severity":1,"message":"117","line":127,"column":75,"nodeType":"118","messageId":"119","endLine":127,"endColumn":77},{"ruleId":"129","severity":1,"message":"130","line":127,"column":88,"nodeType":"131","messageId":"132","endLine":127,"endColumn":95},{"ruleId":"129","severity":1,"message":"130","line":134,"column":50,"nodeType":"131","messageId":"132","endLine":134,"endColumn":57},{"ruleId":"116","severity":1,"message":"117","line":149,"column":77,"nodeType":"118","messageId":"119","endLine":149,"endColumn":79},{"ruleId":"116","severity":1,"message":"117","line":150,"column":63,"nodeType":"118","messageId":"119","endLine":150,"endColumn":65},{"ruleId":"116","severity":1,"message":"117","line":150,"column":135,"nodeType":"118","messageId":"119","endLine":150,"endColumn":137},{"ruleId":"116","severity":1,"message":"117","line":152,"column":71,"nodeType":"118","messageId":"119","endLine":152,"endColumn":73},{"ruleId":"116","severity":1,"message":"117","line":28,"column":52,"nodeType":"118","messageId":"119","endLine":28,"endColumn":54},{"ruleId":"133","severity":1,"message":"134","line":53,"column":7,"nodeType":"135","endLine":53,"endColumn":9,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":2,"column":1,"nodeType":"139","endLine":2,"endColumn":48},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'UID' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.array'. Either include it or remove the dependency array.","ArrayExpression",["140"],"import/no-anonymous-default-export","Assign literal to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"141","fix":"142"},"Update the dependencies array to be: [props.array]",{"range":"143","text":"144"},[2735,2737],"[props.array]"]